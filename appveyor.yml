# Test against these versions of Node.js.
environment:
  global:
      DEBUG: "wdio-screenshot:*"
  matrix:
    - nodejs_version: "0.12"
      GRAPHICSMAGICK: true
    - nodejs_version: "0.12"
      GRAPHICSMAGICK: false
    - nodejs_version: "4"
      GRAPHICSMAGICK: true
    - nodejs_version: "4"
      GRAPHICSMAGICK: false
    - nodejs_version: "5"
      GRAPHICSMAGICK: true
    - nodejs_version: "5"
      GRAPHICSMAGICK: false

# Install scripts. (runs after repo cloning)
install:
  # Install GraphicsMagick
  - if %GRAPHICSMAGICK%==true appveyor-retry appveyor DownloadFile http://downloads.sourceforge.net/graphicsmagick/GraphicsMagick-1.3.20-Q8-win32-dll.exe
  - if %GRAPHICSMAGICK%==true GraphicsMagick-1.3.20-Q8-win32-dll.exe /SP /VERYSILENT /NORESTART /NOICONS /DIR=%CD%\gm
  - if %GRAPHICSMAGICK%==true set PATH=%CD%\gm;%PATH%
  # install chrome & firefox
  - if "%nodejs_version%"=="4" choco install googlechrome
  - if "%nodejs_version%"=="4" choco install firefox -version 46.0.1
  # Get the wanted version of Node
  - ps: Install-Product node $env:nodejs_version
  # Typical npm stuff.
  - npm install -g npm@latest || (timeout 30 && npm install -g npm@latest)
  - set PATH=%APPDATA%\npm;%PATH%
  - npm install || (timeout 30 && npm install)
  # change resolution
  - ps: Set-DisplayResolution -Width 1920 -Height 1080 -Force
  # apply reg hack so that the driver can maintain a connection to the instance of Internet Explorer it creates
  - REG ADD "HKLM\SOFTWARE\Microsoft\Internet Explorer\MAIN\FeatureControl\FEATURE_BFCACHE" /v iexplore.exe /t REG_DWORD /d 00000000
  - REG ADD "HKLM\SOFTWARE\Wow6432Node\Microsoft\Internet Explorer\MAIN\FeatureControl\FEATURE_BFCACHE" /v iexplore.exe /t REG_DWORD /d 00000000

# Post-install test scripts.
test_script:
  # Output useful info for debugging.
  - node --version
  - npm --version
  # run tests
  - npm run test
  - if "%nodejs_version%"=="4" npm run test:appveyor

# Don't actually build.
build: off
